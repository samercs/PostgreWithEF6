// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using System.Text.Json;
using TestPostgreWithEF6.Data;
using TestPostgreWithEF6.Models;

namespace TestPostgreWithEF6.Data.Configurations
{
    public partial class MemoConfiguration : IEntityTypeConfiguration<Memo>
    {
        public void Configure(EntityTypeBuilder<Memo> entity)
        {
            entity.ToTable("memos");

            entity.Property(e => e.Id)
                .HasColumnName("id")
                .UseIdentityAlwaysColumn();

            entity.Property(e => e.Actions)
                .HasColumnType("jsonb")
                .HasColumnName("actions");

            entity.Property(e => e.Approveddate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("approveddate");

            entity.Property(e => e.Confidential).HasColumnName("confidential");

            entity.Property(e => e.Createdby)
                .IsRequired()
                .HasMaxLength(128)
                .HasColumnName("createdby");

            entity.Property(e => e.Createddate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("createddate");

            entity.Property(e => e.Destinationid).HasColumnName("destinationid");

            entity.Property(e => e.Destinationtypeid).HasColumnName("destinationtypeid");

            entity.Property(e => e.Details)
                .HasColumnType("json")
                .HasColumnName("details");

            entity.Property(e => e.Eventid)
                .HasColumnName("eventid")
                .HasDefaultValueSql("1");

            entity.Property(e => e.Isapproved).HasColumnName("isapproved");

            entity.Property(e => e.Isreply).HasColumnName("isreply");

            entity.Property(e => e.Latestdate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("latestdate");

            entity.Property(e => e.Letterid).HasColumnName("letterid");

            entity.Property(e => e.Message)
                .HasColumnType("json")
                .HasColumnName("message");

            entity.Property(e => e.Parentid).HasColumnName("parentid");

            entity.Property(e => e.Replaydata)
                .HasColumnType("json")
                .HasColumnName("replaydata");

            entity.Property(e => e.Replaydate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("replaydate");

            entity.Property(e => e.Replayid).HasColumnName("replayid");

            entity.Property(e => e.Serialno)
                .HasColumnName("serialno")
                .HasDefaultValueSql("nextval('memo_serials'::regclass)");

            entity.Property(e => e.Sourceid).HasColumnName("sourceid");

            entity.Property(e => e.Sourcetypeid).HasColumnName("sourcetypeid");

            entity.Property(e => e.Subject)
                .IsRequired()
                .HasMaxLength(2044)
                .HasColumnName("subject");

            entity.Property(e => e.Topsecret).HasColumnName("topsecret");

            entity.Property(e => e.Typeid)
                .HasColumnName("typeid")
                .HasDefaultValueSql("1");

            entity.Property(e => e.Urgent).HasColumnName("urgent");

            entity.HasOne(d => d.Letter)
                .WithMany(p => p.Memos)
                .HasForeignKey(d => d.Letterid)
                .HasConstraintName("lnk_letters_memos");

            entity.Ignore(i => i.MemoActions);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Memo> entity);
    }
}
